類別定義了一件事物的抽象特點。類的定義包含了數據的形式以及對數據的操作。

對象 ?是類的實例。

成員變量 ?定義在類內部的變量。該變量的值對外是不可見的，但是可以通過成員函數訪問，在類被實例化為對像後，該變量即可稱為對象的屬性。

成員函數 ?定義在類的內部，可用於訪問對象的數據。

繼承 ?繼承性是子類自動共享父類數據結構和方法的機制，這是類之間的一種關係。在定義和實現一個類的時候，可以在一個已經存在的類的基礎之上來進行，把這個已經存在的類所定義的內容作為自己的內容，並加入若干新的內容。

父類 ?一個類被其他類繼承，可將該類稱為父類，或基類，或超類。

子類 ?一個類繼承其他類稱為子類，也可稱為派生類。

多態 ?多態性是指相同的函數或方法可作用於多種類型的對像上並獲得不同的結果。不同的對象，收到同一消息可以產生不同的結果，這種現象稱為多態性。

重載 ?簡單說，就是函數或者方法有同樣的名稱，但是參數列表不相同的情形，這樣的同名不同參數的函數或者方法之間，互相稱之為重載函數或者方法。

抽象性 ?抽象性是指將具有一致的數據結構（屬性）和行為（操作）的對象抽象成類。一個類就是這樣一種抽象，它反映了與應用有關的重要性質，而忽略其他一些無關內容。任何類的劃分都是主觀的，但必須與具體的應用有關。

封裝 ?封裝是指將現實世界中存在的某個客體的屬性與行為綁定在一起，並放置在一個邏輯單元內。

構造函數 ?主要用來在創建對象時初始化對象，即為對象成員變量賦初始值，總與new運算符一起使用在創建對象的語句中。

析構函數 ?析構函數(destructor)與構造函數相反，當對象結束其生命週期時（例如對象所在的函數已調用完畢），系統自動執行析構函數。析構函數往往用來做"清理善後"的工作（例如在建立對象時用new開闢了一片內存空間，應在退出前在析構函數中用delete釋放）。




RESTful API

get	select
post	insert
patch	update
PUT	update
delete	delete



練習 if else
練習 for
練習 while
練習 switch
練習 function

陣列排序教學 rsort()
教學魔術方法
教學namespace


------------------------------------------------------------------------------------------------------
GET VS POST

先舉個例子，如果 HTTP 代表現在我們現實生活中寄信的機制，那麼信封的撰寫格式就是 HTTP。我們姑且將信封外的內容稱為 http-header，信封內的書信稱為 message-body，那麼 HTTP Method 就是你要告訴郵差的寄信規則。

假設 GET 表示信封內不得裝信件的寄送方式，如同是明信片一樣（感謝網友 Kevin 的建議，採用明信片來詮釋 GET），你可以把要傳遞的資訊寫在信封(http-header)上，寫滿為止，價格比較便宜。然而 POST 就是信封內有裝信件的寄送方式（信封有內容物），不但信封可以寫東西，信封內 (message-body) 還可以置入你想要寄送的資料或檔案，價格較貴。

使用 GET 的時候我們直接將要傳送的資料以 Query String（一種Key/Vaule的編碼方式）加在我們要寄送的地址(URL)後面，然後交給郵差傳送。使用 POST 的時候則是將寄送地址(URL)寫在信封上，另外將要傳送的資料寫在另一張信紙後，將信紙放到信封裡面，交給郵差傳送。

接著我來介紹一下實際的運作情況：

我們先來看看 GET 怎麼傳送資料的，當我們送出一個 GET 表單時

<form method="get" action="">
	<input type="text" name="id" />
	<input type="submit" />
</form>
當表單 Submit 之後瀏覽器的網址就變成 "http://xxx.toright.com/?id=010101"，瀏覽器會自動將表單內容轉為 Query String 加在 URL 進行連線。


<form method="post" action="">
<input type="text" name="id" />
<input type="submit" />

網址列沒有變化，那我們來看一下 HTTP Request 封包的內容：

POST / HTTP/1.1
Host: xxx.toright.com
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-TW; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 GTB7.1 ( .NET CLR 3.5.30729)
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: zh-tw,en-us;q=0.7,en;q=0.3
Accept-Encoding: gzip,deflate
Accept-Charset: UTF-8,*
Keep-Alive: 115
Connection: keep-alive
 
Content-Type: application/x-www-form-urlencoded
</code><code>Content-Length: 9
id=020202
</form>


魔術方法


__LINE__
文件中的當前行號。

__FILE__
文件的完整路徑和文件名。如果用在被包含文件中，則返回被包含的文件名。


__FUNCTION__
函數名稱（PHP 4.3.0 新加）。自PHP 5 起本常量返回該函數被定義時的名字（區分大小寫）。在PHP 4 中該值總是小寫字母的。



